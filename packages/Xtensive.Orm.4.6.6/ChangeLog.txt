Changes in 4.6.6 Final:

[main] Added DomainConfiguration.MultidatabaseKeys setting
[main] Fixed incorrect EntitySet caching in ClientProfile
[main] Fixed construction of inherited partial indexes
[main] Fixed NRE when using partial indexes over abstract types
[main] Fixed incorrect type id upgrade when type is moved to another namespace
[oracle] Exclude many standard schemes during extraction

Changes in 4.6.5 Final:

[main] Fixed version validation for entities without explicit version columns
[main] Fixed version validation for decimal version fields
[main] Optimized aggregate translation in complex scenarios
[main] Fixed problem with access to nullable enum columns in final projection
[main] Fixed problem with missing calculated columns in final projection
[main] Fixed materialization of delayed queries with parameters in final projection
[main] Implemented merging of duplicated query parameters
[main] Improved handling of unique index conflicts during persist
[main] Implemented query batching when ValidateEntityVersions option is enabled
[sqlserver] Optimized queries that are executed during initialization
[sqlserver] Added support for full text data type columns
[sqlserver] Added ignoring of filetable objects during upgrade and schema validation
[sqlserverce] Fixed translation of DateTime operations in LINQ
[sqlite] Fixed translation of DateTime operations in LINQ
[mysql] Fixed translation of DateTime operations in LINQ

Changes in 4.6.4 Final:

[main] Fixed regression in Session.Query.ExecuteDelayed introduced in 4.6.4 RC
[mysql] Fixed removal of self-referenced entities
[sqlite] Fixed extraction of multi-column primary keys

Changes in 4.6.4 RC:

[main] Added version validation on persist via SessionOptions.ValidateEntityVersions
[main] Added DomainConfiguration.ConnectionInitializationSql option
[main] Improved diagnostic messages for multimapping configurations when database/schema is not found
[main] Fixed redundant delete queries when clearing key generator tables during upgrade
[main] Fixed NRE in StorageMappingBuilder when persistent type does not have a namespace
[main] Store partial index filter definitions in Metadata.Extension table instead of relying on information schema
[main] Added support for Enum.HasFlags method in LINQ
[main] Improved diagnostic message when non-LINQ method is called within Session.Query.ExecuteDelayed
[sqlite] SQLite library is upgraded to version 1.0.87.0
[sqlserver] Fixed incorrect SQL for table rename in non-default database
[sqlite] Added support for :memory: data source

Changes in 4.6.3 Final:

[main] Fixed incorrect column order in queries after certain schema upgrades
[main] Added DomainConfiguration.NativeLibraryCacheFolder setting
[main] Improved initialization time of TupleDescriptors

Changes in 4.6.2 Final:

[main] Add DomainConfiguration.AllowCyclicDatabaseDependencies option

Changes in 4.6.1 Final:

[main] Fix loading/storing of the domain model when multi-database mode is enabled
[main] Fix assignment of MappingSchema/MappingDatabase for persistent interfaces
[main] Improve exception message for missing default schema in domain configuration
[main] Fix translation of predicates similar to (object) NullableBool 
[main] Fix translation of Union() over boolean columns under certain conditions
[main] Don't enforce implicit non-nullable/length constraints in inconsistent sessions
[main] Import DataObjects.Net.targets conditionally when using NuGet package
[main] Make UpgradeHandler.IsFieldAvailable virtual
[sqlserver] Treat errors 3966 and 3971 as serialization failure

Changes in 4.6.0 Final:

[main] Temporary limit maximal PostSharp version to 2.1.7.16

Changes in 4.6.0 RC:

[main] Added NamingRules.RemoveDots and NamingRules.RemoveHyphens
[main] Added Connection and Transaction properties to UpgradeContext
[main] Added Session property to UpgradeContext
[main] UpgradeStage.Initializing is marked obsolete
[main] Added OnPrepare and OnComplete methods to UpgradeHandler which are executed before and after any upgrade
[main] Added advanced version of domain builder module
[main] Correctly clean up key generator tables if entities are created in OnUpgrade() method
[main] Several methods that implicitly use Session are marked as obsolete

Changes in 4.6.0 Beta 3:

[main] Added advanced version of LINQ query preprocessor
[main] Fixed redundant query nesting under certain conditions
[main] Fixed redundant subqueries under certain conditions
[main] Improved formatting of SQL when chains of AND/OR operators are used
[main] Key.Create(Session) method has been renamed to Key.Generate(Session)
[main] Added Key.Create() overload that allows to specify TypeReferenceAccuracy
[main] Added DirectSessionAccessor.GetChangedEntities() method
[main] Perform upgrade in single transaction when possible
[sqlite] Added support for using SQLite provider in 64-bit processes

Changes in 4.6.0 Beta 2:

[main] Fixed incorrect processing of column rename for non-default database
[main] ServiceContainerBase no longer has finalizer

Changes in 4.6.0 Beta 1:

[main] Added support for mapping persistent types to multiple schemas and databases
[main] Key generators API are heavily reworked
[main] Added option to build Domain in parallel where possible
[main] Reduced number of stages when performing upgrade
[main] Removed many unused types from Xtensive.Core assembly
[main] ConnectionInfo, UrlInfo and ICompletableScope types moved from Xtensive.Core to Xtensive.Orm (assembly & namespace)
[sqlite] Added provider for SQLite database
[sqlserver] Use sequences for key generators for SQL Server 2012
[sqlserver] Use native paging operators for SQL Server 2012

Changes in 4.5.8 Final:

[main] Fixed invalid key comparison under certain conditions
[main] Fixed EntitySet caching invalid state within DisableSaveChanges() scope
[main] Fixed overflow when storing large TimeSpan values
[main] Fixed invalid default values for SessionConfiguration.DefaultIsolationLevel and SessionConfiguration.Options
[main] Fixed support for referencing connection strings in SessionConfiguration
[mysql] Fixed translation of bitwise operations
[mysql] Fixed translation of DateTime.DayOfWeek and DateTime.DayOfYear

Changes in 4.5.8 RC:

[main] Added QueryEndpoint.Items() method for querying EntitySets within compiled queries
[main] Added support for DateTime.AddXxx() methods in LINQ translator
[main] Added support for System.Linq.EnumerableQuery<T> in LINQ translator
[main] Fixed incorrect column references in generated SQL for certain queries
[main] Fixed querying for types with enum type discriminators
[main] Fixed querying for types with enum key fields
[main] Fixed locking of entity that could not be persisted at the moment for some reason
[main] Fixed handling of temporary tables query with zero columns
[main] Fixed translation of GroupJoin() with temporary tables
[main] Fixed translation of Distinct() after Select()
[main] Fixed translation of ThenBy() that implicitly adds joins
[main] Fixed support for LINQ member compilers that return nullable values
[main] Optimized translation of String.IsNullOrEmpty() method
[main] Fixed translation of as with subquery operand
[main] Fixed concurrent access issues with NameBuilder.GetHash method
[main] Fixed incorrect result of FirstOrDefault/SingleOrDefault in certain subqueries
[main] Reduced number of casts in generated SQL when accessing enum fields
[main] Automatically handle namespace-only renames during upgrade
[main] PostSharp is upgraded to version 2.1.7.30
[postgresql] Npgsql is upgraded to version 2.0.12.1
[mysql] MySQL library is upgraded to version 6.7.4
[firebird] Firebird library is upgraded to version 3.0.2.1
[sqlserver] Fixed reading of large SqlDecimal values

Changes in 4.5.7 Final:

[main] Fixed translation of GroupBy() over columns with same name
[main] Improved diagnostic message when more than one upgrade handler is provided
[main] Fixed error after changing case of a persistent field
[main] Wrap exceptions occured within user code with TargetInvocationException
[main] Fixed handling of validation aspects on generic types
[main] Fixed translation of In/Contains over field obtained with `as` operator
[main] Fixed translation of In/Contains over arbitrary expressions
[main] Fixed projection to DTO with inheritance
[main] Fixed translation of DateTime properties access on certain expressions
[main] Fixed accessing of IGrouping.Key in subqueries
[sqlserver] Fixed implementation of "truncate" operation on DateTime expressions

Changes in 4.5.6 Final:

[main] Fix translation of predicates similar to (object) NullableBool 
[main] Fix translation of Union() over boolean columns under certain conditions
[main] Don't enforce implicit non-nullable/length constraints in inconsistent sessions
[main] Import DataObjects.Net.targets conditionally when using NuGet package
[main] Make UpgradeHandler.IsFieldAvailable virtual
[sqlserver] Treat errors 3966 and 3971 as serialization failure

Changes in 4.5.5 Final:

[main] Temporary limit maximal PostSharp version to 2.1.7.16

Changes in 4.5.5 RC:

[main] Omit redundant parentheses in generated SQL for chains of set operations
[main] Correctly handle hierarchy split when doing upgrade
[sqlserverce] Fixed translation of Contains/Any/All under certain scenarios
[mysql] Correctly parse pre-release versions of MySQL (e.g. 5.5.25a)

Changes in 4.5.4 Final:

[main] Added community edition

Changes in 4.5.4 RC2:

[main] Exceptions on IoC container finalization (usually they appear because dependent objects are already finalized) are now suppressed
[main] Fixed NullReferenceException in EnsureIsFetched method in SessionOptions.ReadRemovedObjects mode
[main] Entity.IsMaterializing property wasn't handled properly
[main] Transaction opening is fixed for SessionOptions.ClientProfile

Changes in 4.5.4 RC:

[main] Fixed comparion of Key fields in interaces in LINQ queries under certain scenarios
[main] Visual experience of License Manager has been improved
[main] Fixed incorrect handling of RemoveFieldHint under certain scenarios
[main] Fixed incorrect behavior in DisconnectedEntityState.UpdateOrigin method

Changes in 4.5.3 Final:

[main] Fix NullReferenceException under certain validation scenarios
[main] Fixed memory leak in Domain.Build() process

Changes in 4.5.3 RC4:

[main] Fix POCO materialization when subqueries are used
[main] Fix translation of multiple aggregate subqueries when calculated columns are used
[main] Throw descriptive exception when RenameTypeHint has invalid old type name
[sqlserver] Improve detection of serialization failure errors for SQL Server

Changes in 4.5.3 RC3:

[main] RemoveFieldHint, ChangeFieldTypeHint are now correctly handled for Structure fields
[main] Correctly skip full-text indexes if storage does not support them
[main] Change log is included in distribution
[mysql] Fixed index direction support for MySQL
[mysql] Improved translation of DateTime.Date for MySQL
[mysql] Fixed incorrect translation of Math.Truncate and Decimal.Truncate for MySQL
[mysql] Fixed incorrect translation of String.IndexOf for MySQL
[mysql] Fixed mapping of Single and Double types for MySQL
[mysql] Fixed schema extraction with case-sensitive collation for MySQL
[postgresql] Hex format for byte array literals is used for PostgreSQL 9.0 and later

Changes in 4.5.3 RC2:

[main] Validation now works in ClientProfile
[main] Fixed various errors with certian EntitySet usage scenarios in ClientProfile
[main] Fixed "Scope can't be disposed" error under certain query enumeration scenarios

Changes in 4.5.3 RC:

[main] Fixed index duplication under certain scenarios
[main] Fixed error about duplicate index name under certain scenarios
[main] Added SessionOptions.SuppressRollbackExceptions

